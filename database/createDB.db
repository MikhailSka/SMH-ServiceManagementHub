CREATE TABLE IF NOT EXISTS device
(
    id UUID NOT NULL DEFAULT gen_random_uuid(),
    active BOOL NOT NULL,
    name VARCHAR(128) COLLATE pg_catalog.default NOT NULL,
    creation_date timestamp NOT NULL,
    modification_date timestamp,
CONSTRAINT device_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS operator
(
    id UUID NOT NULL DEFAULT gen_random_uuid(),
    active BOOL NOT NULL,
    name VARCHAR(128) COLLATE pg_catalog.default NOT NULL,
    creation_date timestamp NOT NULL,
    modification_date timestamp,
CONSTRAINT operatort_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS unit
(
    id UUID NOT NULL DEFAULT gen_random_uuid(),
    active BOOL NOT NULL,
    name VARCHAR(128) COLLATE pg_catalog.default NOT NULL,
	serial_number VARCHAR(128) COLLATE pg_catalog.default NOT NULL,
	product_code VARCHAR(128) COLLATE pg_catalog.default NOT NULL,
	device_id UUID NOT NULL, 
	operator_id uuid NOT NULL,
	description VARCHAR(128) COLLATE pg_catalog.default NOT NULL,
    creation_date timestamp NOT NULL,
    modification_date timestamp,
	CONSTRAINT unit_pkey PRIMARY KEY (id),
	CONSTRAINT fk_device FOREIGN KEY (device_id) REFERENCES device (id),
	CONSTRAINT fk_operator FOREIGN KEY (operator_id) REFERENCES operator (id)
);

CREATE TABLE IF NOT EXISTS location
(
    id UUID NOT NULL DEFAULT gen_random_uuid(),
    active BOOL NOT NULL,
    name VARCHAR(128) COLLATE pg_catalog.default NOT NULL,
    creation_date timestamp NOT NULL,
    modification_date timestamp,
	CONSTRAINT location_pkey PRIMARY KEY (id)
);
CREATE TABLE IF NOT EXISTS customer
(
    id UUID NOT NULL DEFAULT gen_random_uuid(),
    active BOOL NOT NULL,
    name VARCHAR(128) COLLATE pg_catalog.default NOT NULL,
	nip VARCHAR(128) COLLATE pg_catalog.default NOT NULL,
    creation_date timestamp NOT NULL,
    modification_date timestamp,
	CONSTRAINT customer_pkey PRIMARY KEY (id)
	
);
CREATE TABLE IF NOT EXISTS customer_location
(
	id UUID NOT NULL DEFAULT gen_random_uuid(),
    active BOOL NOT NULL,
    name VARCHAR(128) COLLATE pg_catalog.default NOT NULL,
	address VARCHAR(128) COLLATE pg_catalog.default NOT NULL,
	customer_id UUID NOT NULL,
    creation_date DATE NOT NULL,
	modification_date timestamp,
	CONSTRAINT customer_location_pkey PRIMARY KEY (id),
	CONSTRAINT fk_customer FOREIGN KEY (customer_id) references customer (id)
);
CREATE TABLE IF NOT EXISTS unit_location
(
    id UUID NOT NULL DEFAULT gen_random_uuid(),
    location_id UUID NOT NULL,
  	description VARCHAR(128) COLLATE pg_catalog.default NOT NULL,
	unit_id UUID UNIQUE REFERENCES unit (id), 
	customer_location_id UUID,
    creation_date timestamp NOT NULL,
    modification_date timestamp,
	CONSTRAINT unit_location_pkey PRIMARY KEY (id),
	CONSTRAINT fk_location FOREIGN KEY (location_id) REFERENCES location (id),
	CONSTRAINT fk_customer_location FOREIGN KEY (customer_location_id) REFERENCES customer_location (id)
);

CREATE TABLE IF NOT EXISTS unit_location_history
(
    id UUID NOT NULL DEFAULT gen_random_uuid(),
	location_id UUID NOT NULL,
  	description VARCHAR(128) COLLATE pg_catalog.default NOT NULL,
	unit_id UUID NOT NULL, 
	customer_location_id UUID,
	unit_location_id UUID NOT NULL,
    creation_date timestamp NOT NULL,
	CONSTRAINT unit_location_history_pkey PRIMARY KEY (id),
	CONSTRAINT fk_unit_location FOREIGN KEY (unit_location_id) REFERENCES unit_location (id),
	CONSTRAINT fk_unit FOREIGN KEY (unit_id) REFERENCES unit (id),
	CONSTRAINT fk_location FOREIGN KEY (location_id) REFERENCES location (id),
	CONSTRAINT fk_customer_location FOREIGN KEY (customer_location_id) REFERENCES customer_location (id)
);


CREATE TABLE IF NOT EXISTS "user"
(
    id UUID NOT NULL DEFAULT gen_random_uuid(),
    status_active BOOL NOT NULL,
    email VARCHAR(128) COLLATE pg_catalog.default NOT NULL,
	password VARCHAR(128) COLLATE pg_catalog.default NOT NULL,
	role VARCHAR(128) NOT NULL,
    creation_date timestamp NOT NULL,
    modification_date timestamp,
	CONSTRAINT user_pkey PRIMARY KEY (id)	
);